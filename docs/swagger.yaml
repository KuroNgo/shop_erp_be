basePath: /api/v1
definitions:
  account_domain.Input:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      account_type:
        type: string
      balance:
        type: number
    type: object
  attendance_domain.Input:
    properties:
      check_in_time:
        type: string
      check_out_time:
        type: string
      date:
        type: string
      employee:
        type: string
      status:
        description: 'Example values: "Present", "Leave", "Sick"'
        type: string
    type: object
  benefits_domain.Input:
    properties:
      amount:
        type: number
      benefit_type:
        description: 'Example: "Health Insurance", "Social Insurance", "Meal Allowance"'
        type: string
      employee_email:
        type: string
      end_date:
        type: string
      start_date:
        type: string
    type: object
  budgets_domain.Input:
    properties:
      amount:
        type: integer
      budget_name:
        type: string
      end_date:
        type: string
      product_category:
        type: string
      start_date:
        type: string
    type: object
  category_domain.Input:
    properties:
      category_name:
        type: string
      description:
        type: string
    type: object
  contracts_domain.Input:
    properties:
      contract_type:
        description: 'Example: "Full-Time", "Part-Time", "Temporary"'
        type: string
      employee:
        type: string
      end_date:
        type: string
      salary:
        type: number
      start_date:
        type: string
      status:
        description: 'Example: "Active", "Expired"'
        type: string
    type: object
  customer_domain.Input:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  departments_domain.Input:
    properties:
      description:
        example: Responsible for managing employee relations, recruitment, and company
          culture.
        type: string
      managerEmail:
        example: admin@admin.com
        type: string
      name:
        example: Human Resources
        type: string
    type: object
  employees_domain.Input:
    properties:
      address:
        example: Bình Thuận
        type: string
      avatarURL:
        type: string
      dateOfBirth:
        example: 01/01/2002
        type: string
      dayOfWork:
        example: 30/8/2024
        type: string
      department:
        example: marketing
        type: string
      email:
        example: hoaiphong01012002@gmail.com
        type: string
      firstName:
        example: Ngô
        type: string
      gender:
        example: Nam
        type: string
      lastName:
        example: Hoài Phong
        type: string
      phone:
        example: "0329245971"
        type: string
      role:
        example: developer
        type: string
    type: object
  inventory_domain.Input:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
      warehouse_id:
        type: string
    type: object
  invoice_domain.Input:
    properties:
      amount_due:
        type: number
      amount_paid:
        type: number
      due_date:
        type: string
      invoice_date:
        type: string
      order_id:
        type: string
      status:
        description: 'Example: "Paid", "Unpaid", "Overdue"'
        type: string
    type: object
  leave_request_domain.Input:
    properties:
      employee:
        example: admin@admin.com
        type: string
      end_date:
        example: 20/07/2024
        type: string
      leave_type:
        description: 'Example: "Sick Leave", "Annual Leave", "Unpaid Leave"'
        example: Sick Leave
        type: string
      start_date:
        example: 20/07/2024
        type: string
      status:
        description: 'Example: "Approved", "Pending", "Rejected"'
        example: Approved
        type: string
    type: object
  performance_review_domain.Input1:
    properties:
      comments:
        type: string
      employee:
        type: string
      performance_score:
        type: integer
      review_date:
        type: string
      reviewer:
        type: string
    type: object
  performance_review_domain.Input2:
    properties:
      comments:
        type: string
      employee_id:
        type: string
      performance_score:
        type: integer
      review_date:
        type: string
      reviewer_id:
        type: string
    type: object
  product_domain.Input:
    properties:
      description:
        type: string
      price:
        type: number
      product_category:
        type: string
      product_name:
        type: string
      quantity_in_stock:
        type: integer
    type: object
  purchase_order_detail_domain.Input:
    properties:
      product:
        type: string
      purchase_order_id:
        type: string
      quantity:
        type: integer
      total_price:
        type: number
      unit_price:
        type: number
    type: object
  purchase_order_domain.Input:
    properties:
      order_date:
        type: string
      order_number:
        type: string
      status:
        description: 'Example: "Processing", "Received", "Cancelled"'
        type: string
      supplier:
        type: string
      total_amount:
        type: number
    type: object
  role_domain.Input:
    properties:
      description:
        example: The admin role has full access and control over the system.
        type: string
      title:
        example: Admin
        type: string
    type: object
  salary_domain.Salary:
    properties:
      base_salary:
        type: number
      bonus:
        type: number
      created_at:
        type: string
      deductions:
        type: number
      id:
        type: string
      net_salary:
        type: number
      role_id:
        type: string
      unit_currency:
        type: string
      updated_at:
        type: string
    type: object
  stock_adjustment_domain.Input:
    properties:
      adjustment_date:
        type: string
      adjustment_type:
        description: 'Example: "Increase", "Decrease"'
        type: string
      product:
        type: string
      quantity:
        type: integer
      reason:
        type: string
      warehouse:
        type: string
    type: object
  supplier_domain.Input:
    properties:
      address:
        type: string
      contact_person:
        type: string
      email:
        type: string
      phone_number:
        type: string
      supplier_name:
        type: string
    type: object
  user_domain.ChangePasswordInput:
    properties:
      password:
        type: string
      password_compare:
        type: string
    required:
    - password
    - password_compare
    type: object
  user_domain.ForgetPassword:
    properties:
      email:
        type: string
    type: object
  user_domain.SignIn:
    properties:
      email:
        example: admin@admin.com
        type: string
      password_hash:
        example: "12345"
        type: string
    type: object
  user_domain.VerificationInput:
    properties:
      verification_code:
        type: string
    required:
    - verification_code
    type: object
host: localhost:8080
info:
  contact:
    email: hoaiphong01012002@gmail.com
    name: API Support
  description: This is a server for Kuro API
  title: Shop E-commerce ERP
  version: "1.0"
paths:
  /api/v1/accounts/create:
    post:
      consumes:
      - application/json
      description: Create the account's information
      parameters:
      - description: Account data
        in: body
        name: Account
        required: true
        schema:
          $ref: '#/definitions/account_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Account Information
      tags:
      - Account
  /api/v1/accounts/delete:
    delete:
      consumes:
      - application/json
      description: Delete the account's information
      parameters:
      - description: Account ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Account Information
      tags:
      - Account
  /api/v1/accounts/get/_id:
    get:
      consumes:
      - application/json
      description: Get the account's information
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/get/all:
    get:
      consumes:
      - application/json
      description: Get the account's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/get/name:
    get:
      consumes:
      - application/json
      description: Get the account's information
      parameters:
      - description: Attendance ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/update:
    put:
      consumes:
      - application/json
      description: Update the account's information
      parameters:
      - description: Account data
        in: body
        name: Account
        required: true
        schema:
          $ref: '#/definitions/account_domain.Input'
      - description: Attendance ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Account Information
      tags:
      - Account
  /api/v1/accounts/update/adjustment:
    put:
      consumes:
      - application/json
      description: Create the inventory's information
      parameters:
      - description: Inventory ID
        in: path
        name: _id
        required: true
        type: string
      - description: Inventory adjustment
        in: path
        name: adjustment
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Inventory Information
      tags:
      - Inventory
  /api/v1/attendances/_id:
    delete:
      description: Deletes the attendance's information by ID
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Attendance Information
      tags:
      - Attendance
    put:
      description: Updates the attendance's information
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      - description: Attendance data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/attendance_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/create:
    post:
      consumes:
      - application/json
      description: Create the attendance's information
      parameters:
      - description: Attendance data
        in: body
        name: CreateOneAttendance
        required: true
        schema:
          $ref: '#/definitions/attendance_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the attendance's information name
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information By ID
      tags:
      - Attendance
  /api/v1/attendances/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the attendance's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/get/email:
    get:
      description: Retrieves the attendance's information name
      parameters:
      - description: Attendance ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information By ID
      tags:
      - Attendance
  /api/v1/benefits/_id:
    delete:
      description: Deletes the benefit's information by ID
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Benefit Information
      tags:
      - Benefit
    put:
      description: Updates the benefit's information
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      - description: Benefit data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/benefits_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/create:
    post:
      consumes:
      - application/json
      description: Create the benefit's information
      parameters:
      - description: Benefit data
        in: body
        name: Benefit
        required: true
        schema:
          $ref: '#/definitions/benefits_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the benefit's information name
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information By ID
      tags:
      - Benefit
  /api/v1/benefits/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the benefit's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/get/email:
    get:
      description: Retrieves the benefit's information name
      parameters:
      - description: Benefit ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information By ID
      tags:
      - Benefit
  /api/v1/budgets/create:
    post:
      consumes:
      - application/json
      description: Create the budget's information
      parameters:
      - description: Budget data
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/budgets_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Budget Information
      tags:
      - Budget
  /api/v1/budgets/delete:
    delete:
      consumes:
      - application/json
      description: Delete the budget's information
      parameters:
      - description: Budget ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/_id:
    get:
      consumes:
      - application/json
      description: Get by id the budget's information
      parameters:
      - description: Budget ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by id Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/all:
    get:
      consumes:
      - application/json
      description: Get the budget's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/name:
    get:
      consumes:
      - application/json
      description: Get by name the budget's information
      parameters:
      - description: Budget name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by name Budget Information
      tags:
      - Budget
  /api/v1/budgets/update:
    put:
      consumes:
      - application/json
      description: Get by name the budget's information
      parameters:
      - description: Budget name
        in: path
        name: name
        required: true
        type: string
      - description: Budget data
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/budgets_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by name Budget Information
      tags:
      - Budget
  /api/v1/categories/create:
    post:
      consumes:
      - application/json
      description: Create new product_category
      parameters:
      - description: Category data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/category_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create product_category
      tags:
      - Category
  /api/v1/categories/delete:
    delete:
      consumes:
      - application/json
      description: Delete new product_category
      parameters:
      - description: Category ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete product_category
      tags:
      - Category
  /api/v1/categories/get/_id:
    get:
      consumes:
      - application/json
      description: Get by id product_category
      parameters:
      - description: Category ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get by id product_category
      tags:
      - Category
  /api/v1/categories/get/all:
    get:
      consumes:
      - application/json
      description: Get all product_category
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get all product_category
      tags:
      - Category
  /api/v1/categories/get/name:
    get:
      consumes:
      - application/json
      description: Get by id product_category
      parameters:
      - description: Category ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get by name product_category
      tags:
      - Category
  /api/v1/categories/update:
    put:
      consumes:
      - application/json
      description: Update product_category
      parameters:
      - description: Category data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/category_domain.Input'
      - description: Category ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update product_category
      tags:
      - Category
  /api/v1/contracts/create:
    post:
      consumes:
      - application/json
      description: Create the contract's information
      parameters:
      - description: Contract data
        in: body
        name: Contract
        required: true
        schema:
          $ref: '#/definitions/contracts_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Contract Information
      tags:
      - Contract
  /api/v1/contracts/delete/_id:
    delete:
      description: Deletes the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/_id:
    get:
      description: Deletes the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the contract's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/email:
    get:
      description: Get one the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one Contract Information
      tags:
      - Contract
  /api/v1/contracts/update:
    put:
      consumes:
      - application/json
      description: Update the contract's information
      parameters:
      - description: Contract data
        in: body
        name: Contract
        required: true
        schema:
          $ref: '#/definitions/contracts_domain.Input'
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Contract Information
      tags:
      - Contract
  /api/v1/departments/create:
    post:
      consumes:
      - application/json
      description: Create the department's information
      parameters:
      - description: Department data
        in: body
        name: Department
        required: true
        schema:
          $ref: '#/definitions/departments_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Department Information
      tags:
      - Department
  /api/v1/departments/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the department's information
      parameters:
      - description: Department ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Department Information
      tags:
      - Department
  /api/v1/departments/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information name
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information By ID
      tags:
      - Department
  /api/v1/departments/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information
      tags:
      - Department
  /api/v1/departments/get/name:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information name
      parameters:
      - description: Contract ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information By Name
      tags:
      - Department
  /api/v1/departments/update:
    put:
      consumes:
      - application/json
      description: Updates the department's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Department Information
      tags:
      - Department
  /api/v1/employees/create:
    post:
      consumes:
      - application/json
      description: Create the employee's information
      parameters:
      - description: Employee data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/employees_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Employee Information
      tags:
      - Employee
  /api/v1/employees/delete:
    delete:
      description: Deletes the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Employee Information
      tags:
      - Employee
  /api/v1/employees/get/_id:
    get:
      description: Retrieves the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the employee's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/get/name:
    get:
      description: Retrieves the employee's information
      parameters:
      - description: Employee
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/update:
    put:
      description: Create the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      - description: Employee data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/employees_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Employee Information
      tags:
      - Employee
  /api/v1/inventory/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve an inventory record using its ID
      parameters:
      - description: Inventory ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get inventory by ID
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      description: Update an inventory item using its ID
      parameters:
      - description: Inventory ID
        in: path
        name: _id
        required: true
        type: string
      - description: Inventory Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/inventory_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Update inventory by ID
      tags:
      - Inventory
  /api/v1/inventory/all:
    get:
      consumes:
      - application/json
      description: Retrieve all inventory records from the system
      produces:
      - application/json
      responses: {}
      summary: Get all inventories
      tags:
      - Inventory
  /api/v1/inventory/check/{warehouse_id}/{product_id}/{required_quantity}:
    get:
      consumes:
      - application/json
      description: Check if the specified quantity of a product is available in a
        given warehouse
      parameters:
      - description: Warehouse ID
        in: path
        name: warehouse_id
        required: true
        type: string
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      - description: Required quantity
        in: path
        name: required_quantity
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Check inventory availability
      tags:
      - Inventory
  /api/v1/inventory/create:
    post:
      consumes:
      - application/json
      description: Add a new inventory record to the system
      parameters:
      - description: Inventory input data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/inventory_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create new inventory
      tags:
      - Inventory
  /api/v1/inventory/delete/{_id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing inventory record by its ID
      parameters:
      - description: Inventory ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete inventory
      tags:
      - Inventory
  /api/v1/inventory/product/{product_id}:
    get:
      consumes:
      - application/json
      description: Retrieve inventory details using the product ID
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get inventory by product ID
      tags:
      - Inventory
  /api/v1/inventory/warehouse/{warehouse_id}:
    get:
      consumes:
      - application/json
      description: Retrieve inventory details using the warehouse ID
      parameters:
      - description: Warehouse ID
        in: path
        name: warehouse_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get inventory by warehouse ID
      tags:
      - Inventory
  /api/v1/leave_requests/create:
    post:
      consumes:
      - application/json
      description: Create the leave request's information
      parameters:
      - description: Leave Request data
        in: body
        name: LeaveRequest
        required: true
        schema:
          $ref: '#/definitions/leave_request_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/delete:
    delete:
      consumes:
      - application/json
      description: Delete the leave request's information
      parameters:
      - description: Leave Request ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/_id:
    get:
      consumes:
      - application/json
      description: Get one by email the leave request's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one by id Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/all:
    get:
      consumes:
      - application/json
      description: Get all the leave request's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get all Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/email:
    get:
      consumes:
      - application/json
      description: Get one by email the leave request's information
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one by email Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/update:
    put:
      consumes:
      - application/json
      description: Updates the leave request's information
      parameters:
      - description: Leave Request data
        in: body
        name: LeaveRequest
        required: true
        schema:
          $ref: '#/definitions/leave_request_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Leave Request Information
      tags:
      - Leave Request
  /api/v1/performance_reviews/create:
    post:
      consumes:
      - application/json
      description: Create the performance review's information
      parameters:
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input1'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/delete:
    delete:
      consumes:
      - application/json
      description: Delete the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/_id:
    get:
      consumes:
      - application/json
      description: Get the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/all:
    get:
      consumes:
      - application/json
      description: Get all the performance review's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get all Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/email:
    get:
      consumes:
      - application/json
      description: Get the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/update:
    put:
      consumes:
      - application/json
      description: Update the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input1'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Performance Review Information
      tags:
      - Performance Review
  /api/v1/products/create:
    post:
      consumes:
      - application/json
      description: Create new product
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/product_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - Product
  /api/v1/products/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the product's information
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Product Information
      tags:
      - Product
  /api/v1/products/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information id
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information By ID
      tags:
      - Product
  /api/v1/products/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information
      tags:
      - Product
  /api/v1/products/get/name:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information id
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information By Name
      tags:
      - Product
  /api/v1/products/update:
    put:
      consumes:
      - application/json
      description: Update new product
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/product_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update product
      tags:
      - Product
  /api/v1/purchase-orders/get/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a purchase order using its ID
      parameters:
      - description: Purchase Order ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a purchase order by ID
      tags:
      - PurchaseOrder
  /api/v1/purchase-orders/get/{supplier_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of purchase orders associated with a specific supplier
        ID
      parameters:
      - description: Supplier ID
        in: path
        name: supplier_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get purchase orders by supplier ID
      tags:
      - PurchaseOrder
  /api/v1/purchase_order_details/create:
    post:
      consumes:
      - application/json
      description: Create a new detail entry for a purchase order
      parameters:
      - description: Purchase Order Detail Input
        in: body
        name: purchase_order_detail
        required: true
        schema:
          $ref: '#/definitions/purchase_order_detail_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create a new purchase order detail
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/delete/{_id}:
    delete:
      consumes:
      - application/json
      description: Delete a purchase order detail from the system using its ID
      parameters:
      - description: Purchase Order Detail ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a purchase order detail by ID
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/get/_id/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a purchase order detail from the system using its ID
      parameters:
      - description: Purchase Order Detail ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a purchase order detail by ID
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/get/all:
    get:
      consumes:
      - application/json
      description: Retrieve all purchase order details from the system
      produces:
      - application/json
      responses: {}
      summary: Get all purchase order details
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/get/by-order/{purchaseOrder_id}:
    get:
      consumes:
      - application/json
      description: Retrieve purchase order details using the Purchase Order ID
      parameters:
      - description: Purchase Order ID
        in: path
        name: purchaseOrder_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get purchase order details by Purchase Order ID
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/pagination:
    get:
      consumes:
      - application/json
      description: Retrieve all purchase order details from the system with pagination
        support
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get all purchase order details with pagination
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_order_details/update/{_id}:
    put:
      consumes:
      - application/json
      description: Update a purchase order detail using its ID
      parameters:
      - description: Purchase Order Detail ID
        in: path
        name: _id
        required: true
        type: string
      - description: Purchase Order Detail Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/purchase_order_detail_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Update a purchase order detail
      tags:
      - PurchaseOrderDetail
  /api/v1/purchase_orders/create:
    post:
      consumes:
      - application/json
      description: Create a new purchase order with the given details
      parameters:
      - description: Purchase Order Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/purchase_order_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create a new purchase order
      tags:
      - PurchaseOrder
  /api/v1/purchase_orders/delete{_id}:
    delete:
      consumes:
      - application/json
      description: Delete a purchase order using its ID
      parameters:
      - description: Purchase Order ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a purchase order
      tags:
      - PurchaseOrder
  /api/v1/purchase_orders/get/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of purchase orders with pagination
      parameters:
      - default: "1"
        description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all purchase orders with pagination
      tags:
      - PurchaseOrder
  /api/v1/purchase_orders/update/{_id}:
    put:
      consumes:
      - application/json
      description: Update the details of a purchase order using its ID
      parameters:
      - description: Purchase Order ID
        in: path
        name: _id
        required: true
        type: string
      - description: Purchase Order Input
        in: body
        name: purchase_order
        required: true
        schema:
          $ref: '#/definitions/purchase_order_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Update a purchase order by ID
      tags:
      - PurchaseOrder
  /api/v1/roles/create:
    post:
      consumes:
      - application/json
      description: Create new role
      parameters:
      - description: Role data
        in: body
        name: Role
        required: true
        schema:
          $ref: '#/definitions/role_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create role
      tags:
      - Role
  /api/v1/roles/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the role's information
      parameters:
      - description: Role ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Role Information
      tags:
      - Role
  /api/v1/roles/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information name
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information By Name
      tags:
      - Role
  /api/v1/roles/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information
      tags:
      - Role
  /api/v1/roles/get/title:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information name
      parameters:
      - description: Employee ID
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information By Name
      tags:
      - Role
  /api/v1/roles/update:
    put:
      consumes:
      - application/json
      description: Updates the role's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Role Information
      tags:
      - Role
  /api/v1/salaries/create:
    post:
      consumes:
      - application/json
      description: Create new salary
      parameters:
      - description: Salary data
        in: body
        name: Salary
        required: true
        schema:
          $ref: '#/definitions/salary_domain.Salary'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create salary
      tags:
      - Salary
  /api/v1/salaries/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the salary's information
      parameters:
      - description: Role ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Salary Information
      tags:
      - Salary
  /api/v1/salaries/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information id
      parameters:
      - description: Role ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information By ID
      tags:
      - Salary
  /api/v1/salaries/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information
      tags:
      - Salary
  /api/v1/salaries/get/role:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information role
      parameters:
      - description: Role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information By Role
      tags:
      - Salary
  /api/v1/salaries/update:
    put:
      consumes:
      - application/json
      description: Updates the salary's information
      parameters:
      - description: Salary data
        in: body
        name: Salary
        required: true
        schema:
          $ref: '#/definitions/salary_domain.Salary'
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Salary Information
      tags:
      - Salary
  /api/v1/suppliers/create:
    post:
      consumes:
      - application/json
      description: Create the supplier's information
      parameters:
      - description: Supplier data
        in: body
        name: Supplier
        required: true
        schema:
          $ref: '#/definitions/supplier_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/delete:
    delete:
      consumes:
      - application/json
      description: delete the supplier's information
      parameters:
      - description: supplier ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: delete supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/get/_id:
    get:
      consumes:
      - application/json
      description: get by id the supplier's information
      parameters:
      - description: supplier ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: get by id supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/get/all:
    get:
      consumes:
      - application/json
      description: get all the supplier's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: get all supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/get/all/pagination:
    get:
      consumes:
      - application/json
      description: get all the supplier's information
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: get all supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/get/name:
    get:
      consumes:
      - application/json
      description: get by name the supplier's information
      parameters:
      - description: supplier name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: get by name supplier Information
      tags:
      - Supplier
  /api/v1/suppliers/update:
    get:
      consumes:
      - application/json
      description: update by name the supplier's information
      parameters:
      - description: Supplier data
        in: body
        name: Supplier
        required: true
        schema:
          $ref: '#/definitions/supplier_domain.Input'
      - description: supplier ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: update by name supplier Information
      tags:
      - Supplier
  /api/v1/users/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the user's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete User Information
      tags:
      - User
  /api/v1/users/forget:
    post:
      consumes:
      - application/json
      description: Sends an email with a verification code for password reset
      parameters:
      - description: Forget password input
        in: body
        name: forgetInput
        required: true
        schema:
          $ref: '#/definitions/user_domain.ForgetPassword'
      produces:
      - application/json
      responses: {}
      summary: User forget password
      tags:
      - User
  /api/v1/users/get/info:
    get:
      consumes:
      - application/json
      description: Retrieves the user's information using the access token stored
        in cookies.
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get User Information
      tags:
      - User
  /api/v1/users/get/refresh:
    get:
      consumes:
      - application/json
      description: Refresh the user's access token using a valid refresh token stored
        in cookies.
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Refresh Access Token
      tags:
      - User
  /api/v1/users/google/callback:
    get:
      description: Login the user's google, but the function not use with swagger.
      responses: {}
      summary: Login Google
      tags:
      - User
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User data
        in: body
        name: LoginUser
        required: true
        schema:
          $ref: '#/definitions/user_domain.SignIn'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Login user
      tags:
      - User
  /api/v1/users/logout:
    get:
      consumes:
      - application/json
      description: Logout the current user
      produces:
      - application/json
      responses: {}
      summary: Logout user
      tags:
      - User
  /api/v1/users/password/forget:
    patch:
      consumes:
      - application/json
      description: Allows the user to change their password after verifying the code
      parameters:
      - description: Change password input
        in: body
        name: changePasswordInput
        required: true
        schema:
          $ref: '#/definitions/user_domain.ChangePasswordInput'
      produces:
      - application/json
      responses: {}
      summary: Change password
      tags:
      - User
  /api/v1/users/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Register a new user with form data
      parameters:
      - description: Email of the user
        example: '"john.doe@example.com"'
        in: formData
        name: email
        required: true
        type: string
      - description: Password of the user
        example: '"securepassword123"'
        in: formData
        name: password
        required: true
        type: string
      - description: Full name of the user
        example: '"John Doe"'
        in: formData
        name: fullName
        required: true
        type: string
      - description: Avatar URL of the user
        example: '"http://example.com/avatar.jpg"'
        in: formData
        name: avatarUrl
        required: true
        type: string
      - description: Image file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Phone number of the user
        example: '"+1234567890"'
        in: formData
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Register user
      tags:
      - User
  /api/v1/users/update:
    put:
      consumes:
      - application/json
      description: Updates the user's first name, last name, and username
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update User Information
      tags:
      - User
  /api/v1/users/verify:
    patch:
      consumes:
      - application/json
      description: Register a new user with form data
      parameters:
      - description: User data
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/user_domain.VerificationInput'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Register user
      tags:
      - User
  /api/v1/users/verify/password:
    patch:
      consumes:
      - application/json
      description: Verifies the code sent to the user's email for changing password
      parameters:
      - description: Verification code input
        in: body
        name: verificationCode
        required: true
        schema:
          $ref: '#/definitions/user_domain.VerificationInput'
      produces:
      - application/json
      responses: {}
      summary: Verify code for password change
      tags:
      - User
  /api/v2/performance_reviews/create:
    post:
      consumes:
      - application/json
      description: Create the performance review's information
      parameters:
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input2'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Performance Review Information
      tags:
      - Performance Review
  /api/v2/performance_reviews/update:
    put:
      consumes:
      - application/json
      description: Update the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input1'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Performance Review Information
      tags:
      - Performance Review
  /customers/create:
    post:
      consumes:
      - application/json
      description: Create a new customer in the system
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/customer_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create a new customer
      tags:
      - Customers
  /customers/delete/{_id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer from the system using their ID
      parameters:
      - description: Customer ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a customer by ID
      tags:
      - Customers
  /customers/get/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a customer from the system using their ID
      parameters:
      - description: Customer ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a customer by ID
      tags:
      - Customers
  /customers/get/all:
    get:
      consumes:
      - application/json
      description: Retrieve all customers from the system
      produces:
      - application/json
      responses: {}
      summary: Get all customers
      tags:
      - Customers
  /customers/get/name/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a customer from the system using their name
      parameters:
      - description: Customer Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a customer by name
      tags:
      - Customers
  /customers/update/{_id}:
    put:
      consumes:
      - application/json
      description: Update a customer's information in the system using their ID
      parameters:
      - description: Customer ID
        in: path
        name: _id
        required: true
        type: string
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/customer_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Update a customer by ID
      tags:
      - Customers
  /invoices/{_id}:
    delete:
      consumes:
      - application/json
      description: Delete an invoice from the system using its ID
      parameters:
      - description: Invoice ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete an invoice by ID
      tags:
      - Invoices
  /invoices/create:
    post:
      consumes:
      - application/json
      description: Create a new invoice in the system
      parameters:
      - description: Invoice data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/invoice_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create a new invoice
      tags:
      - Invoices
  /invoices/get/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve an invoice from the system using its ID
      parameters:
      - description: Invoice ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get an invoice by ID
      tags:
      - Invoices
  /invoices/get/name/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve an invoice from the system using its name
      parameters:
      - description: Invoice Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get an invoice by name
      tags:
      - Invoices
  /invoices/status/{status}:
    get:
      consumes:
      - application/json
      description: Retrieve invoices from the system using their status
      parameters:
      - description: Invoice Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get invoices by status
      tags:
      - Invoices
  /invoices/update/{_id}:
    put:
      consumes:
      - application/json
      description: Update an invoice's information in the system using its ID
      parameters:
      - description: Invoice ID
        in: path
        name: _id
        required: true
        type: string
      - description: Invoice data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/invoice_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Update an invoice by ID
      tags:
      - Invoices
  /stock-adjustments/create:
    post:
      consumes:
      - application/json
      description: Create a new stock adjustment in the system
      parameters:
      - description: Stock Adjustment Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/stock_adjustment_domain.Input'
      produces:
      - application/json
      responses: {}
      summary: Create a new stock adjustment
      tags:
      - StockAdjustment
  /stock-adjustments/delete/{_id}:
    delete:
      consumes:
      - application/json
      description: Delete a stock adjustment from the system using its ID
      parameters:
      - description: Stock Adjustment ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a stock adjustment by ID
      tags:
      - StockAdjustment
  /stock-adjustments/get/_id/{_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a stock adjustment from the system using its ID
      parameters:
      - description: Stock Adjustment ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a stock adjustment by ID
      tags:
      - StockAdjustment
  /stock-adjustments/get/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of stock adjustments, supporting pagination
      parameters:
      - default: "1"
        description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all stock adjustments with pagination
      tags:
      - StockAdjustment
  /stock-adjustments/get/by-date-range/{startDate}/{endDate}:
    get:
      consumes:
      - application/json
      description: Retrieve stock adjustments within a specified date range
      parameters:
      - description: Start date in format YYYY-MM-DD
        in: path
        name: startDate
        required: true
        type: string
      - description: End date in format YYYY-MM-DD
        in: path
        name: endDate
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get stock adjustments by date range
      tags:
      - StockAdjustment
  /stock-adjustments/get/product/{product_id}:
    get:
      consumes:
      - application/json
      description: Retrieve stock adjustments related to a specific Product ID
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get stock adjustments by Product ID
      tags:
      - StockAdjustment
swagger: "2.0"
tags:
- description: represents the attendance information of an employee.
  name: Attendance
- description: represents the benefits an employee receives.
  name: Benefit
- description: represents an employment contract of an employee.
  name: Contract
- description: struct represents a department within the company.
  name: Department
- description: struct represents an employee in the HR system.
  name: Employee
- description: represents a leave request by an employee.
  name: Leave Request
- description: represents performance evaluations of an employee.
  name: Performance Review
- description: struct represents a role or job role.
  name: Role
- description: represents the salary information of an employee.
  name: Salary
- description: represents a user in the system.
  name: User
- description: Stores information about financial accounts like bank accounts or cash
    wallets, tracking balance and account type.
  name: Account
- description: Manages financial transactions for accounts, tracking income and expenses,
    amounts, and transaction dates.
  name: Budget
- name: Product
