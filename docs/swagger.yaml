basePath: /api/v1
definitions:
  account_domain.Input:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      account_type:
        type: string
      balance:
        type: number
    type: object
  attendance_domain.Input:
    properties:
      check_in_time:
        type: string
      check_out_time:
        type: string
      date:
        type: string
      employee:
        type: string
      status:
        description: 'Example values: "Present", "Leave", "Sick"'
        type: string
    type: object
  benefits_domain.Input:
    properties:
      amount:
        type: number
      benefit_type:
        description: 'Example: "Health Insurance", "Social Insurance", "Meal Allowance"'
        type: string
      employee_email:
        type: string
      end_date:
        type: string
      start_date:
        type: string
    type: object
  budgets_domain.Input:
    properties:
      amount:
        type: integer
      budget_name:
        type: string
      end_date:
        type: string
      product_category:
        type: string
      start_date:
        type: string
    type: object
  category_domain.Input:
    properties:
      category_name:
        type: string
      description:
        type: string
    type: object
  contracts_domain.Input:
    properties:
      contract_type:
        description: 'Example: "Full-Time", "Part-Time", "Temporary"'
        type: string
      employee:
        type: string
      end_date:
        type: string
      salary:
        type: number
      start_date:
        type: string
      status:
        description: 'Example: "Active", "Expired"'
        type: string
    type: object
  departments_domain.Input:
    properties:
      description:
        example: Responsible for managing employee relations, recruitment, and company
          culture.
        type: string
      managerEmail:
        example: admin@admin.com
        type: string
      name:
        example: Human Resources
        type: string
    type: object
  employees_domain.Input:
    properties:
      address:
        example: Bình Thuận
        type: string
      avatarURL:
        type: string
      dateOfBirth:
        example: 01/01/2002
        type: string
      dayOfWork:
        example: 30/8/2024
        type: string
      department:
        example: marketing
        type: string
      email:
        example: hoaiphong01012002@gmail.com
        type: string
      firstName:
        example: Ngô
        type: string
      gender:
        example: Nam
        type: string
      lastName:
        example: Hoài Phong
        type: string
      phone:
        example: "0329245971"
        type: string
      role:
        example: developer
        type: string
    type: object
  leave_request_domain.Input:
    properties:
      employee:
        type: string
      end_date:
        type: string
      leave_type:
        description: 'Example: "Sick Leave", "Annual Leave", "Unpaid Leave"'
        type: string
      start_date:
        type: string
      status:
        description: 'Example: "Approved", "Pending", "Rejected"'
        type: string
    type: object
  performance_review_domain.Input:
    properties:
      comments:
        type: string
      employee_id:
        type: string
      performance_score:
        type: integer
      review_date:
        type: string
      reviewer_id:
        type: string
    type: object
  product_domain.Input:
    properties:
      description:
        type: string
      price:
        type: number
      product_category:
        type: string
      product_name:
        type: string
      quantity_in_stock:
        type: integer
    type: object
  role_domain.Input:
    properties:
      description:
        example: The admin role has full access and control over the system.
        type: string
      title:
        example: Admin
        type: string
    type: object
  salary_domain.Salary:
    properties:
      base_salary:
        type: number
      bonus:
        type: number
      created_at:
        type: string
      deductions:
        type: number
      id:
        type: string
      net_salary:
        type: number
      role_id:
        type: string
      unit_currency:
        type: string
      updated_at:
        type: string
    type: object
  user_domain.SignIn:
    properties:
      email:
        example: admin@admin.com
        type: string
      password_hash:
        example: "12345"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: hoaiphong01012002@gmail.com
    name: API Support
  description: This is a server for Kuro API
  title: Shop E-commerce ERP
  version: "1.0"
paths:
  /api/v1/accounts/create:
    post:
      consumes:
      - application/json
      description: Create the account's information
      parameters:
      - description: Account data
        in: body
        name: Account
        required: true
        schema:
          $ref: '#/definitions/account_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Account Information
      tags:
      - Account
  /api/v1/accounts/delete:
    delete:
      consumes:
      - application/json
      description: Delete the account's information
      parameters:
      - description: Account ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Account Information
      tags:
      - Account
  /api/v1/accounts/get/_id:
    get:
      consumes:
      - application/json
      description: Get the account's information
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/get/all:
    get:
      consumes:
      - application/json
      description: Get the account's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/get/name:
    get:
      consumes:
      - application/json
      description: Get the account's information
      parameters:
      - description: Attendance ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Account Information
      tags:
      - Account
  /api/v1/accounts/update:
    put:
      consumes:
      - application/json
      description: Update the account's information
      parameters:
      - description: Account data
        in: body
        name: Account
        required: true
        schema:
          $ref: '#/definitions/account_domain.Input'
      - description: Attendance ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Account Information
      tags:
      - Account
  /api/v1/attendances/_id:
    delete:
      description: Deletes the attendance's information by ID
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Attendance Information
      tags:
      - Attendance
    put:
      description: Updates the attendance's information
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      - description: Attendance data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/attendance_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/create:
    post:
      consumes:
      - application/json
      description: Create the attendance's information
      parameters:
      - description: Attendance data
        in: body
        name: CreateOneAttendance
        required: true
        schema:
          $ref: '#/definitions/attendance_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the attendance's information name
      parameters:
      - description: Attendance ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information By ID
      tags:
      - Attendance
  /api/v1/attendances/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the attendance's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information
      tags:
      - Attendance
  /api/v1/attendances/get/email:
    get:
      description: Retrieves the attendance's information name
      parameters:
      - description: Attendance ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Attendance Information By ID
      tags:
      - Attendance
  /api/v1/benefits/_id:
    delete:
      description: Deletes the benefit's information by ID
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Benefit Information
      tags:
      - Benefit
    put:
      description: Updates the benefit's information
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      - description: Benefit data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/benefits_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/create:
    post:
      consumes:
      - application/json
      description: Create the benefit's information
      parameters:
      - description: Benefit data
        in: body
        name: Benefit
        required: true
        schema:
          $ref: '#/definitions/benefits_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the benefit's information name
      parameters:
      - description: Benefit ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information By ID
      tags:
      - Benefit
  /api/v1/benefits/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the benefit's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information
      tags:
      - Benefit
  /api/v1/benefits/get/email:
    get:
      description: Retrieves the benefit's information name
      parameters:
      - description: Benefit ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Benefit Information By ID
      tags:
      - Benefit
  /api/v1/budgets/create:
    post:
      consumes:
      - application/json
      description: Create the budget's information
      parameters:
      - description: Budget data
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/budgets_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Budget Information
      tags:
      - Budget
  /api/v1/budgets/delete:
    delete:
      consumes:
      - application/json
      description: Delete the budget's information
      parameters:
      - description: Budget ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/_id:
    get:
      consumes:
      - application/json
      description: Get by id the budget's information
      parameters:
      - description: Budget ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by id Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/all:
    get:
      consumes:
      - application/json
      description: Get the budget's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Budget Information
      tags:
      - Budget
  /api/v1/budgets/get/name:
    get:
      consumes:
      - application/json
      description: Get by name the budget's information
      parameters:
      - description: Budget name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by name Budget Information
      tags:
      - Budget
  /api/v1/budgets/update:
    put:
      consumes:
      - application/json
      description: Get by name the budget's information
      parameters:
      - description: Budget name
        in: path
        name: name
        required: true
        type: string
      - description: Budget data
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/budgets_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get by name Budget Information
      tags:
      - Budget
  /api/v1/categories/create:
    post:
      consumes:
      - application/json
      description: Create new category
      parameters:
      - description: Category data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/category_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create category
      tags:
      - Category
  /api/v1/categories/delete:
    delete:
      consumes:
      - application/json
      description: Delete new category
      parameters:
      - description: Category ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete category
      tags:
      - Category
  /api/v1/categories/get/_id:
    get:
      consumes:
      - application/json
      description: Get by id category
      parameters:
      - description: Category ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get by id category
      tags:
      - Category
  /api/v1/categories/get/all:
    get:
      consumes:
      - application/json
      description: Get all category
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get all category
      tags:
      - Category
  /api/v1/categories/get/name:
    get:
      consumes:
      - application/json
      description: Get by id category
      parameters:
      - description: Category ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get by name category
      tags:
      - Category
  /api/v1/categories/update:
    put:
      consumes:
      - application/json
      description: Update category
      parameters:
      - description: Category data
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/category_domain.Input'
      - description: Category ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update category
      tags:
      - Category
  /api/v1/contracts/create:
    post:
      consumes:
      - application/json
      description: Create the contract's information
      parameters:
      - description: Contract data
        in: body
        name: Contract
        required: true
        schema:
          $ref: '#/definitions/contracts_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Contract Information
      tags:
      - Contract
  /api/v1/contracts/delete/_id:
    delete:
      description: Deletes the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/_id:
    get:
      description: Deletes the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the contract's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Contract Information
      tags:
      - Contract
  /api/v1/contracts/get/email:
    get:
      description: Get one the contract's information by ID
      parameters:
      - description: Contract ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one Contract Information
      tags:
      - Contract
  /api/v1/contracts/update:
    put:
      consumes:
      - application/json
      description: Update the contract's information
      parameters:
      - description: Contract data
        in: body
        name: Contract
        required: true
        schema:
          $ref: '#/definitions/contracts_domain.Input'
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Contract Information
      tags:
      - Contract
  /api/v1/departments/create:
    post:
      consumes:
      - application/json
      description: Create the department's information
      parameters:
      - description: Department data
        in: body
        name: Department
        required: true
        schema:
          $ref: '#/definitions/departments_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Department Information
      tags:
      - Department
  /api/v1/departments/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the department's information
      parameters:
      - description: Department ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Department Information
      tags:
      - Department
  /api/v1/departments/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information name
      parameters:
      - description: Contract ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information By ID
      tags:
      - Department
  /api/v1/departments/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information
      tags:
      - Department
  /api/v1/departments/get/name:
    get:
      consumes:
      - application/json
      description: Retrieves the department's information name
      parameters:
      - description: Contract ID
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Department Information By Name
      tags:
      - Department
  /api/v1/departments/update:
    put:
      consumes:
      - application/json
      description: Updates the department's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Department Information
      tags:
      - Department
  /api/v1/employees/create:
    post:
      consumes:
      - application/json
      description: Create the employee's information
      parameters:
      - description: Employee data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/employees_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Employee Information
      tags:
      - Employee
  /api/v1/employees/delete:
    delete:
      description: Deletes the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Employee Information
      tags:
      - Employee
  /api/v1/employees/get/_id:
    get:
      description: Retrieves the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the employee's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/get/name:
    get:
      description: Retrieves the employee's information
      parameters:
      - description: Employee
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Employee Information
      tags:
      - Employee
  /api/v1/employees/update:
    put:
      description: Create the employee's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      - description: Employee data
        in: body
        name: attendance
        required: true
        schema:
          $ref: '#/definitions/employees_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Employee Information
      tags:
      - Employee
  /api/v1/leave_requests/create:
    post:
      consumes:
      - application/json
      description: Create the leave request's information
      parameters:
      - description: Leave Request data
        in: body
        name: LeaveRequest
        required: true
        schema:
          $ref: '#/definitions/leave_request_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/delete:
    delete:
      consumes:
      - application/json
      description: Delete the leave request's information
      parameters:
      - description: Leave Request ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/_id:
    get:
      consumes:
      - application/json
      description: Get one by email the leave request's information
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one by id Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/all:
    get:
      consumes:
      - application/json
      description: Get all the leave request's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get all Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/get/email:
    get:
      consumes:
      - application/json
      description: Get one by email the leave request's information
      parameters:
      - description: Employee ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get one by email Leave Request Information
      tags:
      - Leave Request
  /api/v1/leave_requests/update:
    put:
      consumes:
      - application/json
      description: Updates the leave request's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Leave Request Information
      tags:
      - Leave Request
  /api/v1/performance_reviews/create:
    post:
      consumes:
      - application/json
      description: Create the performance review's information
      parameters:
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Create Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/delete:
    delete:
      consumes:
      - application/json
      description: Delete the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/_id:
    get:
      consumes:
      - application/json
      description: Get the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/all:
    get:
      consumes:
      - application/json
      description: Get all the performance review's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get all Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/get/email:
    get:
      consumes:
      - application/json
      description: Get the performance review's information
      parameters:
      - description: Performance Review  ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Performance Review Information
      tags:
      - Performance Review
  /api/v1/performance_reviews/update:
    put:
      consumes:
      - application/json
      description: Update the performance review's information
      parameters:
      - description: Performance Review data
        in: body
        name: PerformanceReview
        required: true
        schema:
          $ref: '#/definitions/performance_review_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Performance Review Information
      tags:
      - Performance Review
  /api/v1/products/create:
    post:
      consumes:
      - application/json
      description: Create new product
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/product_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - Product
  /api/v1/products/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the product's information
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Product Information
      tags:
      - Product
  /api/v1/products/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information id
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information By ID
      tags:
      - Product
  /api/v1/products/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information
      tags:
      - Product
  /api/v1/products/get/name:
    get:
      consumes:
      - application/json
      description: Retrieves the product's information id
      parameters:
      - description: Product ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Product Information By Name
      tags:
      - Product
  /api/v1/products/update:
    put:
      consumes:
      - application/json
      description: Update new product
      parameters:
      - description: Product data
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/product_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update product
      tags:
      - Product
  /api/v1/roles/create:
    post:
      consumes:
      - application/json
      description: Create new role
      parameters:
      - description: Role data
        in: body
        name: Role
        required: true
        schema:
          $ref: '#/definitions/role_domain.Input'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create role
      tags:
      - Role
  /api/v1/roles/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the role's information
      parameters:
      - description: Role ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Role Information
      tags:
      - Role
  /api/v1/roles/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information name
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information By Name
      tags:
      - Role
  /api/v1/roles/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information
      tags:
      - Role
  /api/v1/roles/get/title:
    get:
      consumes:
      - application/json
      description: Retrieves the role's information name
      parameters:
      - description: Employee ID
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Role Information By Name
      tags:
      - Role
  /api/v1/roles/update:
    put:
      consumes:
      - application/json
      description: Updates the role's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Role Information
      tags:
      - Role
  /api/v1/salaries/create:
    post:
      consumes:
      - application/json
      description: Create new salary
      parameters:
      - description: Salary data
        in: body
        name: Salary
        required: true
        schema:
          $ref: '#/definitions/salary_domain.Salary'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create salary
      tags:
      - Salary
  /api/v1/salaries/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the salary's information
      parameters:
      - description: Role ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete Salary Information
      tags:
      - Salary
  /api/v1/salaries/get/_id:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information id
      parameters:
      - description: Employee ID
        in: path
        name: _id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information By ID
      tags:
      - Salary
  /api/v1/salaries/get/all:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information
      tags:
      - Salary
  /api/v1/salaries/get/role:
    get:
      consumes:
      - application/json
      description: Retrieves the salary's information role
      parameters:
      - description: Employee ID
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get Salary Information By Role
      tags:
      - Salary
  /api/v1/salaries/update:
    put:
      consumes:
      - application/json
      description: Updates the salary's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Update Salary Information
      tags:
      - Salary
  /api/v1/users/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the user's information
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Delete User Information
      tags:
      - User
  /api/v1/users/get/info:
    get:
      consumes:
      - application/json
      description: Retrieves the user's information using the access token stored
        in cookies.
      produces:
      - application/json
      responses: {}
      security:
      - CookieAuth: []
      summary: Get User Information
      tags:
      - User
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User data
        in: body
        name: LoginUser
        required: true
        schema:
          $ref: '#/definitions/user_domain.SignIn'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Login user
      tags:
      - User
  /api/v1/users/logout:
    get:
      consumes:
      - application/json
      description: Logout the current user
      produces:
      - application/json
      responses: {}
      summary: Logout user
      tags:
      - User
swagger: "2.0"
tags:
- description: represents the attendance information of an employee.
  name: Attendance
- description: represents the benefits an employee receives.
  name: Benefit
- description: represents an employment contract of an employee.
  name: Contract
- description: struct represents a department within the company.
  name: Department
- description: struct represents an employee in the HR system.
  name: Employee
- description: represents a leave request by an employee.
  name: Leave Request
- description: represents performance evaluations of an employee.
  name: Performance Review
- description: struct represents a role or job role.
  name: Role
- description: represents the salary information of an employee.
  name: Salary
- description: represents a user in the system.
  name: User
- description: Stores information about financial accounts like bank accounts or cash
    wallets, tracking balance and account type.
  name: Account
- description: Manages financial transactions for accounts, tracking income and expenses,
    amounts, and transaction dates.
  name: Budget
- name: Product
