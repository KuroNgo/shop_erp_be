{
    "swagger": "2.0",
    "info": {
        "description": "This is a server for Kuro API",
        "title": "Shop E-commerce ERP",
        "contact": {
            "name": "API Support",
            "email": "hoaiphong01012002@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/accounts/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create Account Information",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/accounts/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/accounts/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/accounts/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account Information",
                "responses": {}
            }
        },
        "/api/v1/accounts/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/accounts/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update the account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account Information",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account_domain.Input"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/accounts/update/adjustment": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the inventory's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Create Inventory Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Inventory adjustment",
                        "name": "adjustment",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/attendances/_id": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the attendance's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Update Attendance Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attendance data",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attendance_domain.Input"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the attendance's information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Delete Attendance Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/attendances/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the attendance's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Create Attendance Information",
                "parameters": [
                    {
                        "description": "Attendance data",
                        "name": "CreateOneAttendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attendance_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/attendances/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the attendance's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/attendances/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the attendance's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Information",
                "responses": {}
            }
        },
        "/api/v1/attendances/get/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the attendance's information name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/benefits/_id": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the benefit's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Update Benefit Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Benefit data",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/benefits_domain.Input"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the benefit's information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Delete Benefit Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/benefits/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the benefit's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Create Benefit Information",
                "parameters": [
                    {
                        "description": "Benefit data",
                        "name": "Benefit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/benefits_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/benefits/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the benefit's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Get Benefit Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/benefits/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the benefit's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Get Benefit Information",
                "responses": {}
            }
        },
        "/api/v1/benefits/get/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the benefit's information name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benefit"
                ],
                "summary": "Get Benefit Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benefit ID",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/budgets/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create Budget Information",
                "parameters": [
                    {
                        "description": "Budget data",
                        "name": "Budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/budgets_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/budgets/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete Budget Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/budgets/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get by id the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get by id Budget Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/budgets/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get Budget Information",
                "responses": {}
            }
        },
        "/api/v1/budgets/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get by name the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get by name Budget Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/budgets/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get by name the budget's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get by name Budget Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget data",
                        "name": "Budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/budgets_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/api/role": {
            "post": {
                "description": "Add APIs with specific methods to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Assign API permissions to a role",
                "parameters": [
                    {
                        "description": "Role and API data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/role": {
            "post": {
                "description": "Add a new role with API and method to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add a role to the system",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/role/api": {
            "post": {
                "description": "Add role-based permissions for a specific API and method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add role permissions for an API",
                "parameters": [
                    {
                        "description": "API data with Role and Methods",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.APIData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/user": {
            "post": {
                "description": "Assign a role to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add a role to a user",
                "parameters": [
                    {
                        "description": "User and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UserRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete": {
            "delete": {
                "description": "Delete a role from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Role"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/api/role": {
            "delete": {
                "description": "Remove role-based permissions for an API and method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete role permissions for an API",
                "parameters": [
                    {
                        "description": "API and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.APIRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/role/api": {
            "delete": {
                "description": "Remove APIs with specific methods for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete API for a role",
                "parameters": [
                    {
                        "description": "Role and API data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleAPI"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/user": {
            "delete": {
                "description": "Remove a specific role from a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete role for a user",
                "parameters": [
                    {
                        "description": "User ID and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UserRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/categories/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create product_category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "Category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/categories/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete new product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete product_category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/categories/get/_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get by id product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get by id product_category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/categories/get/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get all product_category",
                "responses": {}
            }
        },
        "/api/v1/categories/get/name": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get by id product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get by name product_category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/categories/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update product_category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update product_category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "Category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category_domain.Input"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/contracts/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the contract's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Create Contract Information",
                "parameters": [
                    {
                        "description": "Contract data",
                        "name": "Contract",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contracts_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/contracts/delete/_id": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the contract's information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Delete Contract Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/contracts/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the contract's information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Get Contract Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/contracts/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the contract's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Get Contract Information",
                "responses": {}
            }
        },
        "/api/v1/contracts/get/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get one the contract's information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Get one Contract Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/contracts/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update the contract's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Update Contract Information",
                "parameters": [
                    {
                        "description": "Contract data",
                        "name": "Contract",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contracts_domain.Input"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/customers/create": {
            "post": {
                "description": "Create a new customer in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/customers/delete": {
            "delete": {
                "description": "Delete a customer from the system using their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/customers/get/_id": {
            "get": {
                "description": "Retrieve a customer from the system using their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/customers/get/all": {
            "get": {
                "description": "Retrieve all customers from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "responses": {}
            }
        },
        "/api/v1/customers/get/name": {
            "get": {
                "description": "Retrieve a customer from the system using their name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/customers/update": {
            "put": {
                "description": "Update a customer's information in the system using their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/departments/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the department's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Create Department Information",
                "parameters": [
                    {
                        "description": "Department data",
                        "name": "Department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/departments_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/departments/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the department's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Delete Department Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/departments/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the department's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get Department Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/departments/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the department's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get Department Information",
                "responses": {}
            }
        },
        "/api/v1/departments/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the department's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get Department Information By Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/departments/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the department's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Update Department Information",
                "responses": {}
            }
        },
        "/api/v1/employees/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the employee's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create Employee Information",
                "parameters": [
                    {
                        "description": "Employee data",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the employee's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the employee's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the employee's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get Employee Information",
                "responses": {}
            }
        },
        "/api/v1/employees/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the employee's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the employee's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create Employee Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee data",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/all": {
            "get": {
                "description": "Retrieve all inventory records from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get all inventories",
                "responses": {}
            }
        },
        "/api/v1/inventory/check/{warehouse_id}/{product_id}/{required_quantity}": {
            "get": {
                "description": "Check if the specified quantity of a wm_product is available in a given warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Check inventory availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "warehouse_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Required quantity",
                        "name": "required_quantity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/create": {
            "post": {
                "description": "Add a new inventory record to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Create new inventory",
                "parameters": [
                    {
                        "description": "Inventory input data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventory_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/delete/{_id}": {
            "delete": {
                "description": "Delete an existing inventory record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Delete inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/warehouse/{warehouse_id}": {
            "get": {
                "description": "Retrieve inventory details using the warehouse ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory by warehouse ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "warehouse_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/wm_product/{product_id}": {
            "get": {
                "description": "Retrieve inventory details using the wm_product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory by wm_product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/inventory/{_id}": {
            "get": {
                "description": "Retrieve an inventory record using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "Update an inventory item using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventory"
                ],
                "summary": "Update inventory by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Inventory Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventory_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/create": {
            "post": {
                "description": "Create a new invoice in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a new invoice",
                "parameters": [
                    {
                        "description": "Invoice data",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invoice_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/delete": {
            "delete": {
                "description": "Delete an invoice from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Delete an invoice by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/get/_id": {
            "get": {
                "description": "Retrieve an invoice from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Get an invoice by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/get/name": {
            "get": {
                "description": "Retrieve an invoice from the system using its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Get an invoice by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/status": {
            "get": {
                "description": "Retrieve invoices from the system using their status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoices by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice Status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/invoices/update": {
            "put": {
                "description": "Update an invoice's information in the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Update an invoice by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Invoice data",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invoice_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/leave-requests/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Create Leave Request Information",
                "parameters": [
                    {
                        "description": "Leave Request data",
                        "name": "LeaveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/leave_request_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/leave-requests/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Delete Leave Request Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leave Request ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/leave-requests/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get one by email the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Get one by id Leave Request Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/leave-requests/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get all the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Get all Leave Request Information",
                "responses": {}
            }
        },
        "/api/v1/leave-requests/get/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get one by email the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Get one by email Leave Request Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/leave-requests/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the leave request's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Request"
                ],
                "summary": "Update Leave Request Information",
                "parameters": [
                    {
                        "description": "Leave Request data",
                        "name": "LeaveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/leave_request_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/order-details/create": {
            "post": {
                "description": "This API creates a new Order Detail from the input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Create a new Order Detail",
                "parameters": [
                    {
                        "description": "Order Detail information",
                        "name": "orderDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order_details_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/order-details/delete": {
            "delete": {
                "description": "This API deletes an Order Detail based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Delete an Order Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Detail ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/order-details/get/_id": {
            "get": {
                "description": "This API retrieves an Order Detail based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Get an Order Detail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Detail ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/order-details/get/order_id": {
            "get": {
                "description": "This API retrieves all Order Details associated with a specific Order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Get Order Details by Order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/order-details/get/product_id": {
            "get": {
                "description": "Retrieve all order details associated with a given Product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Get Order Details by Product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success, data: Retrieved Order Details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: error, message: Retrieval error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/order-details/update": {
            "put": {
                "description": "This API updates an existing Order Detail based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderDetails"
                ],
                "summary": "Update an Order Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Detail ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated Order Detail information",
                        "name": "orderDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order_details_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/create": {
            "post": {
                "description": "This API creates a new payment from the input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new Payment",
                "parameters": [
                    {
                        "description": "Payment information",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payments_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/delete": {
            "delete": {
                "description": "This API deletes a payment based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/get/_id": {
            "get": {
                "description": "Retrieve a payment based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Get a Payment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/get/order_id": {
            "get": {
                "description": "Retrieve all payments associated with a specific Order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Get Payments by Order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/get/status": {
            "get": {
                "description": "Retrieve all payments associated with a specific status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Get Payments by Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/payments/update": {
            "put": {
                "description": "This API updates an existing payment based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Update a Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated Payment information",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payments_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Create Performance Review Information",
                "parameters": [
                    {
                        "description": "Performance Review data",
                        "name": "PerformanceReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/performance_review_domain.Input1"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Delete Performance Review Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Performance Review  ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Get Performance Review Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Performance Review  ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get all the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Get all Performance Review Information",
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/get/email": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Get Performance Review Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Performance Review  ID",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/performance-reviews/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Update Performance Review Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Performance Review  ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Performance Review data",
                        "name": "PerformanceReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/performance_review_domain.Input1"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/products/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new wm_product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create wm_product",
                "parameters": [
                    {
                        "description": "Product data",
                        "name": "Product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/products/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the wm_product's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete Product Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/products/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the wm_product's information id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/products/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the wm_product's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Information",
                "responses": {}
            }
        },
        "/api/v1/products/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the wm_product's information id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Information By Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/products/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update new wm_product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update wm_product",
                "parameters": [
                    {
                        "description": "Product data",
                        "name": "Product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/create": {
            "post": {
                "description": "Create a new detail entry for a purchase order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Create a new purchase order detail",
                "parameters": [
                    {
                        "description": "Purchase Order Detail Input",
                        "name": "purchase_order_detail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/purchase_order_detail_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/delete/{_id}": {
            "delete": {
                "description": "Delete a purchase order detail from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Delete a purchase order detail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order Detail ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/get/_id": {
            "get": {
                "description": "Retrieve a purchase order detail from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Get a purchase order detail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order Detail ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/get/all": {
            "get": {
                "description": "Retrieve all purchase order details from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Get all purchase order details",
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/get/purchase-order-id": {
            "get": {
                "description": "Retrieve purchase order details using the Purchase Order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Get purchase order details by Purchase Order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order ID",
                        "name": "purchaseOrder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/pagination": {
            "get": {
                "description": "Retrieve all purchase order details from the system with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Get all purchase order details with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-order-details/update": {
            "put": {
                "description": "Update a purchase order detail using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrderDetail"
                ],
                "summary": "Update a purchase order detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order Detail ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase Order Detail Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/purchase_order_detail_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-orders/get/_id": {
            "get": {
                "description": "Retrieve a purchase order using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Get a purchase order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-orders/get/supplier_id": {
            "get": {
                "description": "Retrieve a list of purchase orders associated with a specific supplier ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Get purchase orders by supplier ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "supplier_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase-orders/update": {
            "put": {
                "description": "Update the details of a purchase order using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Update a purchase order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase Order Input",
                        "name": "purchase_order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/purchase_order_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase_orders/create": {
            "post": {
                "description": "Create a new purchase order with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Create a new purchase order",
                "parameters": [
                    {
                        "description": "Purchase Order Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/purchase_order_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase_orders/delete": {
            "delete": {
                "description": "Delete a purchase order using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Delete a purchase order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase Order ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/purchase_orders/get/all": {
            "get": {
                "description": "Retrieve a list of purchase orders with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PurchaseOrder"
                ],
                "summary": "Get all purchase orders with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/roles/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "Role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/roles/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the role's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete Role Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/roles/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the role's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get Role Information By Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/roles/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the role's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get Role Information",
                "responses": {}
            }
        },
        "/api/v1/roles/get/title": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the role's information name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get Role Information By Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/roles/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the role's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Update Role Information",
                "responses": {}
            }
        },
        "/api/v1/salaries/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new salary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Create salary",
                "parameters": [
                    {
                        "description": "Salary data",
                        "name": "Salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/salary_domain.Salary"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/salaries/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the salary's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Delete Salary Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/salaries/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the salary's information id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Get Salary Information By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/salaries/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the salary's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Get Salary Information",
                "responses": {}
            }
        },
        "/api/v1/salaries/get/role": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the salary's information role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Get Salary Information By Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/salaries/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the salary's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Update Salary Information",
                "parameters": [
                    {
                        "description": "Salary data",
                        "name": "Salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/salary_domain.Salary"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-orders/create": {
            "post": {
                "description": "This API creates a new sales order from the input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Create a new Sales Order",
                "parameters": [
                    {
                        "description": "Sales Order information",
                        "name": "salesOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sale_orders_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-orders/delete": {
            "delete": {
                "description": "This API deletes a sales order based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Delete a Sales Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Order ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: error, message: Deletion error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sales-orders/get/_id": {
            "get": {
                "description": "Retrieve a sales order based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Get a Sales Order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Order ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-orders/get/customer_id": {
            "get": {
                "description": "Retrieve all sales orders associated with a specific Customer ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Get Sales Orders by Customer ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-orders/get/status": {
            "get": {
                "description": "Retrieve all sales orders associated with a specific status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Get Sales Orders by Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Order Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-orders/update": {
            "put": {
                "description": "This API updates an existing sales order based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Update a Sales Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Order ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated Sales Order information",
                        "name": "salesOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sale_orders_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-reports/_id": {
            "get": {
                "description": "Retrieve a sales report based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Get a Sales Report by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Report ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-reports/create": {
            "post": {
                "description": "This API creates a new sales report from the input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Create a new Sales Report",
                "parameters": [
                    {
                        "description": "Sales Report information",
                        "name": "salesReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sale_reports_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-reports/delete": {
            "delete": {
                "description": "This API deletes a sales report based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Delete a Sales Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Report ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-reports/get/report_date": {
            "get": {
                "description": "Retrieve all sales reports associated with a specific report date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Get Sales Reports by Date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report Date",
                        "name": "report_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/sales-reports/get/summary": {
            "get": {
                "description": "Retrieve a summary of sales reports for a specified date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Get Sales Report Summary by Date Range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success, data: Retrieved Sales Report Summary",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "status: error, message: Retrieval error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/sales-reports/update": {
            "put": {
                "description": "This API updates an existing sales report based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SalesReports"
                ],
                "summary": "Update a Sales Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sales Report ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated Sales Report information",
                        "name": "salesReport",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sale_reports_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/_id": {
            "get": {
                "description": "Retrieve a shipping entry based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Get a Shipping Entry by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipping Entry ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/create": {
            "post": {
                "description": "This API creates a new shipping entry from the input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Create a new Shipping Entry",
                "parameters": [
                    {
                        "description": "Shipping information",
                        "name": "shipping",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shipping_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/delete": {
            "delete": {
                "description": "This API deletes a shipping entry based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Delete a Shipping Entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipping Entry ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/get/order_id": {
            "get": {
                "description": "Retrieve shipping entries associated with a specific order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Get Shipping Entries by Order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/get/status": {
            "get": {
                "description": "Retrieve shipping entries associated with a specific status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Get Shipping Entries by Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipping Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/shipping/update": {
            "put": {
                "description": "Update an existing shipping entry based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shipping"
                ],
                "summary": "Update a Shipping Entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipping Entry ID",
                        "name": "_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated Shipping information",
                        "name": "shipping",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shipping_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Create supplier Information",
                "parameters": [
                    {
                        "description": "Supplier data",
                        "name": "Supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/supplier_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "delete the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "delete supplier Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/get/_id": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "get by id the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "get by id supplier Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/get/all": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "get all the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "get all supplier Information",
                "responses": {}
            }
        },
        "/api/v1/suppliers/get/all/pagination": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "get all the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "get all supplier Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/get/name": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "get by name the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "get by name supplier Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/suppliers/update": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "update by name the supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "update by name supplier Information",
                "parameters": [
                    {
                        "description": "Supplier data",
                        "name": "Supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/supplier_domain.Input"
                        }
                    },
                    {
                        "type": "string",
                        "description": "supplier ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User Information",
                "responses": {}
            }
        },
        "/api/v1/users/forget": {
            "post": {
                "description": "Sends an email with a verification code for password reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User forget password",
                "parameters": [
                    {
                        "description": "Forget password input",
                        "name": "forgetInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.ForgetPassword"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/get/info": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the user's information using the access token stored in cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Information",
                "responses": {}
            }
        },
        "/api/v1/users/get/refresh": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Refresh the user's access token using a valid refresh token stored in cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh Access Token",
                "responses": {}
            }
        },
        "/api/v1/users/google/callback": {
            "get": {
                "description": "Login the user's google, but the function not use with swagger.",
                "tags": [
                    "User"
                ],
                "summary": "Login Google",
                "responses": {}
            }
        },
        "/api/v1/users/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "LoginUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.SignIn"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/logout": {
            "get": {
                "description": "Logout the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "responses": {}
            }
        },
        "/api/v1/users/password/forget": {
            "patch": {
                "description": "Allows the user to change their password after verifying the code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Change password input",
                        "name": "changePasswordInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user with form data",
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"john.doe@example.com\"",
                        "description": "Email of the user",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"securepassword123\"",
                        "description": "Password of the user",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"John Doe\"",
                        "description": "Full name of the user",
                        "name": "fullName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"http://example.com/avatar.jpg\"",
                        "description": "Avatar URL of the user",
                        "name": "avatarUrl",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"+1234567890\"",
                        "description": "Phone number of the user",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the user's first name, last name, and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User Information",
                "responses": {}
            }
        },
        "/api/v1/users/verify": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user with form data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.VerificationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/verify/password": {
            "patch": {
                "description": "Verifies the code sent to the user's email for changing password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify code for password change",
                "parameters": [
                    {
                        "description": "Verification code input",
                        "name": "verificationCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.VerificationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v2/performance-reviews/create": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Create Performance Review Information",
                "parameters": [
                    {
                        "description": "Performance Review data",
                        "name": "PerformanceReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/performance_review_domain.Input2"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v2/performance-reviews/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update the performance review's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Performance Review"
                ],
                "summary": "Update Performance Review Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Performance Review  ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Performance Review data",
                        "name": "PerformanceReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/performance_review_domain.Input1"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/create": {
            "post": {
                "description": "Create a new stock adjustment in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Create a new stock adjustment",
                "parameters": [
                    {
                        "description": "Stock Adjustment Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stock_adjustment_domain.Input"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/delete/{_id}": {
            "delete": {
                "description": "Delete a stock adjustment from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Delete a stock adjustment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stock Adjustment ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/get/_id/{_id}": {
            "get": {
                "description": "Retrieve a stock adjustment from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Get a stock adjustment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stock Adjustment ID",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/get/all": {
            "get": {
                "description": "Retrieve a list of stock adjustments, supporting pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Get all stock adjustments with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/get/by-date-range/{startDate}/{endDate}": {
            "get": {
                "description": "Retrieve stock adjustments within a specified date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Get stock adjustments by date range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in format YYYY-MM-DD",
                        "name": "startDate",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date in format YYYY-MM-DD",
                        "name": "endDate",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/stock-adjustments/get/wm_product/{product_id}": {
            "get": {
                "description": "Retrieve stock adjustments related to a specific Product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StockAdjustment"
                ],
                "summary": "Get stock adjustments by Product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "account_domain.Input": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "attendance_domain.Input": {
            "type": "object",
            "properties": {
                "check_in_time": {
                    "type": "string"
                },
                "check_out_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "employee": {
                    "type": "string"
                },
                "status": {
                    "description": "Example values: \"Present\", \"Leave\", \"Sick\"",
                    "type": "string"
                }
            }
        },
        "benefits_domain.Input": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "benefit_type": {
                    "description": "Example: \"Health Insurance\", \"Social Insurance\", \"Meal Allowance\"",
                    "type": "string"
                },
                "employee_email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "budgets_domain.Input": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "budget_name": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "transaction_category": {
                    "type": "string"
                }
            }
        },
        "category_domain.Input": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "contracts_domain.Input": {
            "type": "object",
            "properties": {
                "contract_type": {
                    "description": "Example: \"Full-Time\", \"Part-Time\", \"Temporary\"",
                    "type": "string"
                },
                "employee": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "description": "Example: \"Active\", \"Expired\"",
                    "type": "string"
                }
            }
        },
        "customer_domain.Input": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "departments_domain.Input": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Responsible for managing employee relations, recruitment, and company culture."
                },
                "managerEmail": {
                    "type": "string",
                    "example": "admin@admin.com"
                },
                "name": {
                    "type": "string",
                    "example": "Human Resources"
                }
            }
        },
        "employees_domain.Input": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Bình Thuận"
                },
                "avatarURL": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string",
                    "example": "01/01/2002"
                },
                "dayOfWork": {
                    "type": "string",
                    "example": "30/8/2024"
                },
                "department": {
                    "type": "string",
                    "example": "marketing"
                },
                "email": {
                    "type": "string",
                    "example": "hoaiphong01012002@gmail.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ngô"
                },
                "gender": {
                    "type": "string",
                    "example": "Nam"
                },
                "lastName": {
                    "type": "string",
                    "example": "Hoài Phong"
                },
                "phone": {
                    "type": "string",
                    "example": "0329245971"
                },
                "role": {
                    "type": "string",
                    "example": "developer"
                }
            }
        },
        "handler.APIData": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.APIRole": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.Role": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.RoleAPI": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.RoleData": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.UserRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "inventory_domain.Input": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "invoice_domain.Input": {
            "type": "object",
            "properties": {
                "amount_due": {
                    "type": "number"
                },
                "amount_paid": {
                    "type": "number"
                },
                "due_date": {
                    "type": "string"
                },
                "invoice_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "description": "Example: \"Paid\", \"Unpaid\", \"Overdue\"",
                    "type": "string"
                }
            }
        },
        "leave_request_domain.Input": {
            "type": "object",
            "properties": {
                "employee": {
                    "type": "string",
                    "example": "admin@admin.com"
                },
                "end_date": {
                    "type": "string",
                    "example": "20/07/2024"
                },
                "leave_type": {
                    "description": "Example: \"Sick Leave\", \"Annual Leave\", \"Unpaid Leave\"",
                    "type": "string",
                    "example": "Sick Leave"
                },
                "start_date": {
                    "type": "string",
                    "example": "20/07/2024"
                },
                "status": {
                    "description": "Example: \"Approved\", \"Pending\", \"Rejected\"",
                    "type": "string",
                    "example": "Approved"
                }
            }
        },
        "order_details_domain.Input": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                }
            }
        },
        "payments_domain.Input": {
            "type": "object",
            "properties": {
                "amount_paid": {
                    "type": "number"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_method": {
                    "description": "Example: \"Credit Card\", \"Bank Transfer\", \"Cash on Delivery\"",
                    "type": "string"
                },
                "status": {
                    "description": "Example: \"Paid\", \"Unpaid\"",
                    "type": "string"
                }
            }
        },
        "performance_review_domain.Input1": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "employee": {
                    "type": "string"
                },
                "performance_score": {
                    "type": "integer"
                },
                "review_date": {
                    "type": "string"
                },
                "reviewer": {
                    "type": "string"
                }
            }
        },
        "performance_review_domain.Input2": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "performance_score": {
                    "type": "integer"
                },
                "review_date": {
                    "type": "string"
                },
                "reviewer_id": {
                    "type": "string"
                }
            }
        },
        "product_domain.Input": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiry_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_category": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "quantity_in_stock": {
                    "type": "integer"
                }
            }
        },
        "purchase_order_detail_domain.Input": {
            "type": "object",
            "properties": {
                "purchase_order_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                },
                "wm_product": {
                    "type": "string"
                }
            }
        },
        "purchase_order_domain.Input": {
            "type": "object",
            "properties": {
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "status": {
                    "description": "Example: \"Processing\", \"Received\", \"Cancelled\"",
                    "type": "string"
                },
                "supplier": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "role_domain.Input": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "The admin role has full access and control over the system."
                },
                "title": {
                    "type": "string",
                    "example": "Admin"
                }
            }
        },
        "salary_domain.Salary": {
            "type": "object",
            "properties": {
                "base_salary": {
                    "type": "number"
                },
                "bonus": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "net_salary": {
                    "type": "number"
                },
                "role_id": {
                    "type": "string"
                },
                "unit_currency": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "sale_orders_domain.Input": {
            "type": "object",
            "properties": {
                "customerID": {
                    "type": "string"
                },
                "orderDate": {
                    "type": "string"
                },
                "orderNumber": {
                    "type": "string"
                },
                "shippingAddress": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "number"
                }
            }
        },
        "sale_reports_domain.Input": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string"
                },
                "quantity_sold": {
                    "type": "integer"
                },
                "report_date": {
                    "type": "string"
                },
                "total_revenue": {
                    "type": "number"
                },
                "total_sales": {
                    "type": "number"
                },
                "wm_product": {
                    "type": "string"
                }
            }
        },
        "shipping_domain.Input": {
            "type": "object",
            "properties": {
                "actual_delivery": {
                    "type": "string"
                },
                "estimated_delivery": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "shipping_date": {
                    "type": "string"
                },
                "shipping_method": {
                    "description": "Example: \"Standard\", \"Express\", \"International\"",
                    "type": "string"
                },
                "status": {
                    "description": "Example: \"In Transit\", \"Delivered\", \"Returned\"",
                    "type": "string"
                },
                "tracking_number": {
                    "type": "string"
                }
            }
        },
        "stock_adjustment_domain.Input": {
            "type": "object",
            "properties": {
                "adjustment_date": {
                    "type": "string"
                },
                "adjustment_type": {
                    "description": "Example: \"Increase\", \"Decrease\"",
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                },
                "wm_product": {
                    "type": "string"
                }
            }
        },
        "supplier_domain.Input": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "supplier_name": {
                    "type": "string"
                }
            }
        },
        "user_domain.ChangePasswordInput": {
            "type": "object",
            "required": [
                "password",
                "password_compare"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "password_compare": {
                    "type": "string"
                }
            }
        },
        "user_domain.ForgetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "user_domain.SignIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@admin.com"
                },
                "password_hash": {
                    "type": "string",
                    "example": "12345"
                }
            }
        },
        "user_domain.VerificationInput": {
            "type": "object",
            "required": [
                "verification_code"
            ],
            "properties": {
                "verification_code": {
                    "type": "string"
                }
            }
        }
    }
}